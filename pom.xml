<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.codepoke.ai.challenges</groupId>
  <artifactId>poke-ai-hunterkiller</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>HunterKiller</name>
  <description>A squad-based AI challenge in which the players are tasked with eliminating each others bases while ensuring their base remains intact.</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
    
  <build>
  
  	<!-- Ensure that Eclipse doesn't try to delombok it as it'll be run with the JRE, and complain it can't find the tools. -->
  	<pluginManagement>
	  <plugins>
	    <plugin>
	     <groupId>org.eclipse.m2e</groupId>
	     <artifactId>lifecycle-mapping</artifactId>
	     <version>1.0.0</version>
	     <configuration>
	       <lifecycleMappingMetadata>
	         <pluginExecutions>
	           <pluginExecution>
	             <pluginExecutionFilter>
	               <groupId>org.projectlombok</groupId>
	               <artifactId>lombok-maven-plugin</artifactId>
	               <versionRange>1.16.4.1</versionRange>
	               <goals>
	                 <goal>delombok</goal>
	                 <goal>testDelombok</goal>
	               </goals>
	             </pluginExecutionFilter>
	             <action>
	               <ignore/>
	             </action>
	           </pluginExecution>
	         </pluginExecutions>
	       </lifecycleMappingMetadata>
	     </configuration>
	    </plugin>
	  </plugins>
	</pluginManagement>
    
    <plugins>
    
		<plugin>
		  <artifactId>maven-compiler-plugin</artifactId>
		  <version>3.6.0</version>
		  <configuration>
		    <source>1.6</source>
		    <target>1.6</target>
		  </configuration>
		</plugin> 
    
    	<!-- Make sure we build a source, javadoc, compiled jar, "fat" jar and finally the HTML 5 compatible jar -->
    	
    	<!-- Start by creating a directory with delomboked sources -->
    	
    	<plugin>
			    <groupId>org.projectlombok</groupId>
			    <artifactId>lombok-maven-plugin</artifactId>
			    <version>1.16.4.1</version>
			    <executions>
			      <execution>
			        <id>delombok</id>
			        <phase>generate-sources</phase>
			        <goals>
			          <goal>delombok</goal>
			        </goals>
			        <configuration>
			          <addOutputDirectory>false</addOutputDirectory>
			          <sourceDirectory>src/main/java</sourceDirectory>
			        </configuration>
			      </execution>
			      <execution>
			        <id>test-delombok</id>
			        <phase>generate-test-sources</phase>
			        <goals>
			          <goal>testDelombok</goal>
			        </goals>
			        <configuration>
			          <addOutputDirectory>false</addOutputDirectory>
			          <sourceDirectory>src/test/java</sourceDirectory>
			        </configuration>
			      </execution>
			    </executions>

			    <!-- This fixes the missing Context issue -->
			    <dependencies>
			        <dependency>
			            <groupId>sun.jdk</groupId>
			            <artifactId>tools</artifactId>
			            <version>1.6</version>
			            <scope>system</scope>
			            <systemPath>${java.home}/../lib/tools.jar</systemPath>
			        </dependency>
			    </dependencies>
	  		</plugin>
    	
    	<!-- Makes source files jar file -->
  			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Make javadoc jar file -->
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-javadoc-plugin</artifactId>
			  <executions>
				    <execution>
				      <id>attach-javadocs</id>
				      <goals>
				        <goal>jar</goal>
				      </goals>
				    </execution>
			  </executions>
			  <configuration>
			  	<failOnError>false</failOnError>
			  </configuration>
			</plugin>
    
    	<!-- Make the "fat" jar -->
		    <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-assembly-plugin</artifactId>
		            <version>2.5.4</version>
		            <configuration>
		                <descriptorRefs>
		                    <descriptorRef>jar-with-dependencies</descriptorRef>
		                </descriptorRefs>
	
		            </configuration>
		            <executions>
		                <execution>
		                    <id>assemble-all</id>
		                    <phase>package</phase>
		                    <goals>
		                        <goal>single</goal>
		                    </goals>
		                </execution>
		            </executions>
	        </plugin>
    
    	<!-- Prepare the HTML 5 directory for the compile by copying the specific folders we need (i.e. class files and delomboked source files. -->
	    <!-- We are using the ANT-run plugin to be able to run ant commands -->
	    <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-antrun-plugin</artifactId>
		    <version>1.8</version>
		    <executions>
		        <execution>
		            <phase>package</phase>
		            <goals>
		                <goal>run</goal>
		            </goals>
		            <configuration>
		            	<target>
		            		<echo>Copying over files for HTML 5</echo>
		            		<copy todir="${project.build.directory}/html5">
		            			<fileset dir="${project.build.directory}/classes"/>
		            			<fileset dir="${project.build.directory}/generated-sources/delombok"/>
		            		</copy>
		            	</target>
	                </configuration>
	            </execution>
	        </executions>
	    </plugin>
    
    	<!-- 
    		Deal with the creation of the html-5 jar.
    		GWT compile requires a jar file that contains the class files (default), Delomboked .java files, and the GWT XML file 
    		We copy over the sources to the destination build, so we should exclude those from the default jar
    	-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<!-- Creates the .class java file for maven consumers -->
					<execution>
						<id>default-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<excludes>
								<exclude>**/*.gwt.xml</exclude>
								<exclude>**/*.java</exclude>
							</excludes>							
						</configuration>
					</execution>
					<!-- Creates the HTML 5 compatible jar for the GWT build. -->
					<execution>
						<id>html5</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>			
							<classesDirectory>${project.build.directory}/html5</classesDirectory>
							<includes>
								<include>**/*.class</include>
								<include>**/*.java</include>
								<include>**/*.gwt.xml</include>
							</includes>	
							<classifier>html5</classifier>				
						</configuration>
					</execution>
				</executions>
			</plugin>   
      
    </plugins>
    
  </build>
  
  <dependencies>
  	
	<!-- Internal -->
	<dependency>
		<groupId>net.codepoke.ai</groupId>
		<artifactId>poke-ai-base</artifactId>
		<version>0.0.3-SNAPSHOT</version>
	</dependency>
	
	<!-- LibGDX Specific -->
	<dependency>
		<groupId>com.badlogicgames.gdx</groupId>
		<artifactId>gdx</artifactId>
		<version>1.9.5</version>
	</dependency>
		
  	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<version>1.16.2</version>
		<scope>provided</scope>
	</dependency>
	
	<dependency>
		<groupId>org.apache.directory.studio</groupId>
		<artifactId>org.apache.commons.io</artifactId>
		<version>2.4</version>
	</dependency>
	
	<!-- Test -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.10</version>
		<scope>test</scope>
	</dependency>
  	
  </dependencies>
  
</project>